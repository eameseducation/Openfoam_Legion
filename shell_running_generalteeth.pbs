#!/bin/bash -l

###############################################
#
#      Batch script to run the teeth problem
#
##################################################
needle_internal_radius=0.4
outer_radius=0.5
domain_gridsize=0.1
tip_to_end=10
inlet_radius=1
###############################################
#
# have done hole_radius=0.05 1.0 0.2 0.5 0.8
#
##################################################
hole_radius=0.8
kinematic_viscosity=1
results_dir=test_tube
Runtime=40.0
name_of_job="Teeth_$hole_radius""_"$needle_internal_radius"_"$tip_to_end"_"

###############################################
#
#      Start of bash for parallel
#
##################################################


# 1. Force bash
#$ -S /bin/bash

# 2. Request ten minutes of wallclock time (format hours:minutes:seconds).
#$ -l h_rt=23:0:0

# 3. Request 1 gigabyte of RAM.
#$ -l mem=1G

# 4. Request 15 gigabyte of TMPDIR space (default is 10 GB)
#$ -l tmpfs=15G

# 5. Set up the job array.  In this instance we have requested 1000 tasks
# numbered 1 to 1000.
#$ -t 1-10

# 6. Set the name of the job.
#$ -N Teeth_cone_0.8

# 7. Set the working directory to somewhere in your scratch space.  This is
# a necessary step with the upgraded software stack as compute nodes cannot
# write to $HOME.
# Replace "<your_UCL_id>" with your UCL user ID :)
#$ -wd /home/ucemiea/Scratch/Conical_Tube/

# 8. Parse parameter file to get variables.
number=$SGE_TASK_ID
#paramfile=/home/ucemiea/Scratch/input/params.txt
 
#index=`sed -n ${number}p $paramfile | awk '{print $1}'`
#variable1=`sed -n ${number}p $paramfile | awk '{print $2}'`
#variable2=`sed -n ${number}p $paramfile | awk '{print $3}'`
#variable3=`sed -n ${number}p $paramfile | awk '{print $4}'`

# 9. Run the program (replace echo with your binary and options).
 

##
## 
## mesh creation using gmsh on the fly
module load mesa gmsh
module load python/2.7.9
module load boost/1_54_0/mpi/intel-2015-update2
module load openfoam/2.3.1/intel-2015-update2


let "flowspeed=(20*number)"

LOCATION=$(pwd)
LOCATION_WK=$LOCATION/Case$name_of_job$flowspeed"_"$number
cp -r $LOCATION/Case0 $LOCATION_WK
 



echo "######################################"
echo "Testing the data in gmsh with openfoam"
echo $LOCATION_WK
echo $number
echo "######################################"

## modify the geo file to include the information
cp $LOCATION_WK/mesh/Teeth_IE_test1_generalcase.geo $LOCATION_WK/mesh/temporary.geo
sed 's/wwww/'"$inlet_radius"'/g' <$LOCATION_WK/mesh/temporary.geo >$LOCATION_WK/mesh/temporary1.geo
sed 's/pppp/'"$hole_radius"'/g' <$LOCATION_WK/mesh/temporary1.geo >$LOCATION_WK/mesh/temporary2.geo
sed 's/zzzz/'"$tip_to_end"'/g' <$LOCATION_WK/mesh/temporary2.geo >$LOCATION_WK/mesh/temporary3.geo
sed 's/aaaa/'"$needle_internal_radius"'/g' <$LOCATION_WK/mesh/temporary3.geo >$LOCATION_WK/mesh/temporary4.geo
sed 's/bbbb/'"$outer_radius"'/g' <$LOCATION_WK/mesh/temporary4.geo >$LOCATION_WK/mesh/temporary5.geo
sed 's/yyyy/'"$domain_gridsize"'/g' <$LOCATION_WK/mesh/temporary5.geo >$LOCATION_WK/mesh/temporary6.geo

echo "######################################"
echo "## Running gmsh "
echo "######################################"

gmsh $LOCATION_WK/mesh/temporary6.geo -3 -o $LOCATION_WK/Teeth_IE_test$number.msh

echo "######################################"
echo "## Cleaning up the temporary files"
echo "######################################"

rm $LOCATION_WK/mesh/temporary*.geo

echo "######################################"
echo "## Testing the data in gmsh with openfoam"
echo $LOCATION_WK
echo $number
echo "######################################"

gmshToFoam $LOCATION_WK/Teeth_IE_test$number.msh -case $LOCATION_WK

echo "######################################"
echo "Testing the data in gmsh with openfoam"
echo $LOCATION_WK
echo $number
echo "######################################"

cd $LOCATION_WK
checkMesh 
echo pwd
##cp constant/polyMesh/boundary_save constant/polyMesh/boundary
##
awk 'NR==22 {$0="        type            wedge;"} 1' $LOCATION_WK/constant/polyMesh/boundary > $LOCATION_WK/constant/polyMesh/temp
mv $LOCATION_WK/constant/polyMesh/temp $LOCATION_WK/constant/polyMesh/boundary
awk 'NR==23 {$0="        physicalType    wedge;"} 1' $LOCATION_WK/constant/polyMesh/boundary > $LOCATION_WK/constant/polyMesh/temp
mv $LOCATION_WK/constant/polyMesh/temp $LOCATION_WK/constant/polyMesh/boundary
awk 'NR==43 {$0="        type            wedge;"} 1' $LOCATION_WK/constant/polyMesh/boundary > $LOCATION_WK/constant/polyMesh/temp
mv $LOCATION_WK/constant/polyMesh/temp $LOCATION_WK/constant/polyMesh/boundary
awk 'NR==44 {$0="        physicalType    wedge;"} 1' $LOCATION_WK/constant/polyMesh/boundary > $LOCATION_WK/constant/polyMesh/temp
mv $LOCATION_WK/constant/polyMesh/temp $LOCATION_WK/constant/polyMesh/boundary


mkdir -p $LOCATION/$results_dir/$Runtime

echo "######################################"
echo "Testing the data in gmsh with openfoam"
echo $LOCATION
echo $number
echo "######################################"



echo "######################################"
echo "## Flow speed choice" 
echo "Flowspeed =" $flowspeed
echo "######################################"

echo "######################################"
echo "## Geometrical Constraints" 
echo "R_0 =" $inlet_radius
echo "R_i =" $needle_internal_radius
echo "R_o =" $outer_radius
echo "R_b =" $hole_radius
echo "L =" $tip_to_end
echo "######################################"

sed 's/xxxx/'"$Runtime"'/g' <$LOCATION_WK/system/controlDict_replace >$LOCATION_WK/system/controlDict
sed 's/xxxx/'"$flowspeed"'/g' <$LOCATION_WK/0/U_replace >$LOCATION_WK/0/U
sed 's/xxxx/'"$kinematic_viscosity"'/g' <$LOCATION_WK/constant/transportProperties_replace >$LOCATION_WK/constant/transportProperties

icoFoam 


